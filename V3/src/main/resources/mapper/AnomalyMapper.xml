<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.v3.mapper.AnomalyMapper">

    <resultMap id="anomalyResultMap" type="Anomaly">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="courtId" column="court_id"/>
        <result property="description" column="description"/>
        <result property="status" column="status"/>
        <result property="adminResponse" column="admin_response"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="username" column="username"/>
        <result property="realName" column="real_name"/>
        <result property="courtName" column="court_name"/>
        <result property="courtNumber" column="court_number"/>
    </resultMap>

    <select id="findAllWithDetails" resultMap="anomalyResultMap">
        SELECT a.*, u.username, u.real_name, c.court_name, c.court_number
        FROM anomaly a
        LEFT JOIN user u ON a.user_id = u.id
        LEFT JOIN court c ON a.court_id = c.id
        ORDER BY a.create_time DESC
    </select>

    <select id="findByUserId" resultMap="anomalyResultMap">
        SELECT a.*, u.username, u.real_name, c.court_name, c.court_number
        FROM anomaly a
        LEFT JOIN user u ON a.user_id = u.id
        LEFT JOIN court c ON a.court_id = c.id
        WHERE a.user_id = #{userId}
        ORDER BY a.create_time DESC
    </select>

    <select id="findById" resultMap="anomalyResultMap">
        SELECT a.*, u.username, u.real_name, c.court_name, c.court_number
        FROM anomaly a
        LEFT JOIN user u ON a.user_id = u.id
        LEFT JOIN court c ON a.court_id = c.id
        WHERE a.id = #{id}
    </select>

    <insert id="insert" parameterType="Anomaly" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO anomaly (user_id, court_id, description, status)
        VALUES (#{userId}, #{courtId}, #{description}, #{status})
    </insert>

    <update id="updateStatus">
        UPDATE anomaly 
        SET status = #{status}, admin_response = #{adminResponse}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM anomaly WHERE id = #{id}
    </delete>

    <select id="findByStatus" resultMap="anomalyResultMap">
        SELECT a.*, u.username, u.real_name, c.court_name, c.court_number
        FROM anomaly a
        LEFT JOIN user u ON a.user_id = u.id
        LEFT JOIN court c ON a.court_id = c.id
        WHERE a.status = #{status}
        ORDER BY a.create_time DESC
    </select>

    <select id="findByCourtId" resultMap="anomalyResultMap">
        SELECT a.*, u.username, u.real_name, c.court_name, c.court_number
        FROM anomaly a
        LEFT JOIN user u ON a.user_id = u.id
        LEFT JOIN court c ON a.court_id = c.id
        WHERE a.court_id = #{courtId}
        ORDER BY a.create_time DESC
    </select>

    <select id="findByCondition" resultMap="anomalyResultMap">
        SELECT a.*, u.username, u.real_name, c.court_name, c.court_number
        FROM anomaly a
        LEFT JOIN user u ON a.user_id = u.id
        LEFT JOIN court c ON a.court_id = c.id
        <where>
            <if test="courtId != null">
                AND a.court_id = #{courtId}
            </if>
            <if test="status != null and status != ''">
                AND a.status = #{status}
            </if>
        </where>
        ORDER BY a.create_time DESC
    </select>

</mapper> 